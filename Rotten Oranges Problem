from collections import deque

def minTimeToRotAll(mat):
    n, m = len(mat), len(mat[0])
    q = deque()
    fresh = 0
    for i in range(n):
        for j in range(m):
            if mat[i][j] == 2:
                q.append((i,j))
            elif mat[i][j] == 1:
                fresh += 1
    time = 0
    dirs = [(-1,0),(1,0),(0,-1),(0,1)]
    while q:
        size = len(q)
        rotted = False
        for _ in range(size):
            x, y = q.popleft()
            for dx, dy in dirs:
                nx, ny = x+dx, y+dy
                if 0<=nx<n and 0<=ny<m and mat[nx][ny]==1:
                    mat[nx][ny]=2
                    q.append((nx,ny))
                    fresh -= 1
                    rotted = True
        if rotted:
            time += 1
    return time if fresh==0 else -1

mat = [[0,1,2],[0,1,2],[2,1,1]]
print(minTimeToRotAll(mat))  
